# Whether to enable P2P network (default: true). Note: if delayed_node plugin is enabled, this option will be ignored and P2P network will always be disabled.
# enable-p2p-network =

# Whether to accept incoming P2P connections (default: true)
# p2p-accept-incoming-connections = 

# The endpoint (local IP address:port) on which the node will listen for P2P connections. Specify 127.0.0.1 as address to listen on all IP addresses
 p2p-endpoint = 127.0.0.1:1776

# The endpoint (external IP address:port) that other P2P peers should connect to. If the address is unknown or dynamic, specify 127.0.0.1
# p2p-inbound-endpoint = 

# Whether the node will connect to new P2P peers advertised by other peers (default: true)
# p2p-connect-to-new-peers = 

# Determines which P2P peers are advertised in response to address requests from other peers. Algorithms: 'all', 'nothing', 'list', exclude_list'. (default: all)
# p2p-advertise-peer-algorithm = 

# The endpoint (IP address:port) of the P2P peer to advertise, only takes effect when algorithm is 'list' (may specify multiple times)
# p2p-advertise-peer-endpoint = 

# The endpoint (IP address:port) of the P2P peer to not advertise, only takes effect when algorithm is 'exclude_list' (may specify multiple times)
# p2p-exclude-peer-endpoint = 

# The endpoint (IP address:port) of the P2P peer to connect to on startup (may specify multiple times)
# seed-node = 

# JSON array of P2P peers to connect to on startup
# seed-nodes = 

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.
# checkpoint = 

# Endpoint for websocket RPC to listen on
rpc-endpoint = 127.0.0.1:8090

# Endpoint for TLS websocket RPC to listen on
# rpc-tls-endpoint = 

# The TLS certificate file for this server
# server-pem = 

# Password for this certificate
# server-pem-password = 

# A HTTP header similar to X-Forwarded-For (XFF), used by the RPC server to extract clients' address info, usually added by a trusted reverse proxy
# proxy-forwarded-for-header = 

# File to read Genesis State from

genesis-json = /etc/acloudbank/genesis.json

# Block signing key to use for init witnesses, overrides genesis file, for debug
# dbg-init-key = 

# A string defined by the node operator, which can be retrieved via the login_api::get_info API
# api-node-info = 

# JSON file specifying API permissions
# api-access = 

# Number of IO threads, default to 0 for auto-configuration
# io-threads = 

# Whether allow API clients to subscribe to universal object creation and removal events
# enable-subscribe-to-all = 

# Whether to enable tracking of votes of standby witnesses and committee members. Set it to true to provide accurate data to API clients, set to false for slightly better performance.
# enable-standby-votes-tracking = 

# For history_api::get_account_history_operations to set max limit value
api-limit-get-account-history-operations = 100

# For history_api::get_account_history to set max limit value
api-limit-get-account-history = 100

# For orders_api::get_grouped_limit_orders to set max limit value
api-limit-get-grouped-limit-orders = 101

# Maximum number of records to return for the history_api::get_market_history API
api-limit-get-market-history = 200

# For history_api::get_relative_account_history to set max limit value
api-limit-get-relative-account-history = 100

# For history_api::get_account_history_by_operations to set max limit value
api-limit-get-account-history-by-operations = 100

# For asset_api::get_asset_holders to set max limit value
api-limit-get-asset-holders = 100

# For database_api_impl::get_key_references to set max limit value
api-limit-get-key-references = 100

# For database_api_impl::get_htlc_by_from and get_htlc_by_to to set max limit value
api-limit-get-htlc-by = 100

# For database_api_impl::get_full_accounts to set max accounts to query at once
api-limit-get-full-accounts = 50

# For database_api_impl::get_full_accounts to set max items to return in the lists
api-limit-get-full-accounts-lists = 500

# Maximum number of accounts allowed to subscribe per connection with the get_full_accounts API
api-limit-get-full-accounts-subscribe = 100

# For database_api_impl::get_top_voters to set max limit value
api-limit-get-top-voters = 200

# For database_api_impl::get_call_orders and get_call_orders_by_account to set max limit value
api-limit-get-call-orders = 300

# For database_api_impl::get_settle_orders and get_settle_orders_by_account to set max limit value
api-limit-get-settle-orders = 300

# For database_api_impl::list_assets and get_assets_by_issuer to set max limit value
api-limit-get-assets = 101

# For database_api_impl::get_limit_orders to set max limit value
api-limit-get-limit-orders = 300

# For database_api_impl::get_limit_orders_by_account to set max limit value
api-limit-get-limit-orders-by-account = 101

# For database_api_impl::get_order_book to set max limit value
api-limit-get-order-book = 50

# For database_api_impl::list_htlcs to set max limit value
api-limit-list-htlcs = 100

# For database_api_impl::lookup_accounts to set max limit value
api-limit-lookup-accounts = 1000

# For database_api_impl::lookup_witness_accounts to set max limit value
api-limit-lookup-witness-accounts = 1000

# For database_api_impl::lookup_committee_member_accounts to set max limit value
api-limit-lookup-committee-member-accounts = 1000

# For database_api_impl::lookup_vote_ids to set max limit value
api-limit-lookup-vote-ids = 1000

# For database_api_impl::get_account_limit_orders to set max limit value
api-limit-get-account-limit-orders = 101

# For database_api_impl::get_collateral_bids to set max limit value
api-limit-get-collateral-bids = 100

# For database_api_impl::get_top_markets to set max limit value
api-limit-get-top-markets = 100

# For database_api_impl::get_trade_history to set max limit value
api-limit-get-trade-history = 100

# For database_api_impl::get_trade_history_by_sequence to set max limit value
api-limit-get-trade-history-by-sequence = 100

# For database_api_impl::get_withdraw_permissions_by_giver to set max limit value
api-limit-get-withdraw-permissions-by-giver = 101

# For database_api_impl::get_withdraw_permissions_by_recipient to set max limit value
api-limit-get-withdraw-permissions-by-recipient = 101

# Set maximum limit value for database APIs which query for tickets
api-limit-get-tickets = 101

# Set maximum limit value for database APIs which query for liquidity pools
api-limit-get-liquidity-pools = 101

# Set maximum limit value for APIs which query for history of liquidity pools
api-limit-get-liquidity-pool-history = 101

# Set maximum limit value for database APIs which query for SameT Funds
api-limit-get-samet-funds = 101

# Set maximum limit value for database APIs which query for credit offers or credit deals
api-limit-get-credit-offers = 101

# Set maximum limit value for APIs which query for account storage info
api-limit-get-storage-info = 101

# Space-separated list of plugins to activate
plugins = witness account_history market_history grouped_orders api_helper_indexes custom_operations

# Do not exit if api_helper_indexes plugin is not enabled.
# ignore-api-helper-indexes-warning = 


# ==============================================================================
# witness plugin options
# ==============================================================================

# Enable block production, even if the chain is stale.
enable-stale-production = true

# Percent of witnesses (0-100) that must be participating in order to produce blocks
required-participation = 0

# ID of witness controlled by this node (e.g. "1.6.5", quotes are required, may specify multiple times)
witness-id = "1.6.0"
witness-id = "1.6.1"
witness-id = "1.6.2"
witness-id = "1.6.3"
witness-id = "1.6.4"
witness-id = "1.6.5"
witness-id = "1.6.6"
witness-id = "1.6.7"
witness-id = "1.6.8"
witness-id = "1.6.9"
witness-id = "1.6.10"

# Tuple of [PublicKey, WIF private key] (may specify multiple times)
private-key = ["KES6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV","5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3"]

# Path to a file containing tuples of [PublicKey, WIF private key]. The file has to contain exactly one tuple (i.e. private - public key pair) per line. This option may be specified multiple times, thus multiple files can be provided.
# private-key-file = 


# ==============================================================================
# debug_witness plugin options
# ==============================================================================

# Tuple of [PublicKey, WIF private key] (may specify multiple times)
debug-private-key = ["KES6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV","5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3"]


# ==============================================================================
# account_history plugin options
# ==============================================================================

# Account ID to track history for (may specify multiple times; if unset will track all accounts)
# track-account = 

# Keep only those operations in memory that are related to account history tracking
partial-operations = 1

# Maximum number of operations per account that will be kept in memory. Note that the actual number may be higher due to the min-blocks-to-keep option.
max-ops-per-account = 100

# Maximum number of operations to keep for accounts for which extended history is kept. This option only takes effect when track-account is not used and max-ops-per-account is not zero.
# extended-max-ops-per-account = 

# Track longer history for these accounts (may specify multiple times)
# extended-history-by-account = 

# Track longer history for accounts with this registrar (may specify multiple times)
# extended-history-by-registrar = 

# Operations which are in the latest X blocks will be kept in memory. This option only takes effect when track-account is not used and max-ops-per-account is not zero. Note that this option may cause more history records to be kept in memory than the limit defined by the max-ops-per-account option, but the amount will be limited by the max-ops-per-acc-by-min-blocks option. (default: 30000)
# min-blocks-to-keep = 

# A potential higher limit on the maximum number of operations per account to be kept in memory when the min-blocks-to-keep option causes the amount to exceed the limit defined by the max-ops-per-account option. If this is less than max-ops-per-account, max-ops-per-account will be used. (default: 1000)
# max-ops-per-acc-by-min-blocks = 


# ==============================================================================
# elasticsearch plugin options
# ==============================================================================

# Elastic Search database node url(http://localhost:9200/)
# elasticsearch-node-url = 

# Pass basic auth to elasticsearch database('')
# elasticsearch-basic-auth = 

# Number of bulk documents to index on replay(10000)
# elasticsearch-bulk-replay = 

# Number of bulk documents to index on a syncronied chain(100)
# elasticsearch-bulk-sync = 

# Add a prefix to the index(bitshares-)
# elasticsearch-index-prefix = 

# The maximum index mapping depth (index.mapping.depth.limit) setting in ES, should be >=2. (20)
# elasticsearch-max-mapping-depth = 

# Start doing ES job after block(0)
# elasticsearch-start-es-after-block = 

# Use visitor to index additional data(slows down the replay(false))
# elasticsearch-visitor = 

# Save operation as object(true)
# elasticsearch-operation-object = 

# Save operation as string. Needed to serve history api calls(false)
# elasticsearch-operation-string = 

# Mode of operation: only_save(0), only_query(1), all(2) - Default: 0
# elasticsearch-mode = 


# ==============================================================================
# market_history plugin options
# ==============================================================================

# Track market history by grouping orders into buckets of equal size measured in seconds specified as a JSON array of numbers
bucket-size = [60,300,900,3600,14400,86400,604800]

# How far back in time to track history for each bucket size, measured in the number of buckets (default: 1500)
history-per-size = 1500

# Will only store this amount of matched orders for each market in order history for querying, or those meet the other option, which has more data (default: 1000). This parameter is reused for liquidity pools as maximum operations per pool in history.
max-order-his-records-per-market = 1000

# Will only store matched orders in last X seconds for each market in order history for querying, or those meet the other option, which has more data (default: 259200 (3 days)). This parameter is reused for liquidity pools as operations in last X seconds per pool in history. Note: this parameter need to be greater than 24 hours to be able to serve market ticker data correctly.
max-order-his-seconds-per-market = 259200


# ==============================================================================
# delayed_node plugin options
# ==============================================================================

# RPC endpoint of a trusted validating node (required for delayed_node)
# trusted-node = 


# ==============================================================================
# snapshot plugin options
# ==============================================================================

# Block number after which to do a snapshot
# snapshot-at-block = 

# Block time (ISO format) after which to do a snapshot
# snapshot-at-time = 

# Pathname of JSON file where to store the snapshot
# snapshot-to = 


# ==============================================================================
# es_objects plugin options
# ==============================================================================

# Elasticsearch node url(http://localhost:9200/)
# es-objects-elasticsearch-url = 

# Basic auth username:password('')
# es-objects-auth = 

# Number of bulk documents to index on replay(10000)
# es-objects-bulk-replay = 

# Number of bulk documents to index on a synchronized chain(100)
# es-objects-bulk-sync = 

# Store proposal objects (true)
# es-objects-proposals = 

# Store all updates to the proposal objects (false)
# es-objects-proposals-store-updates = 

# Do not delete a proposal from ES even if it is deleted from chain state. It is implicitly true and can not be set to false if es-objects-proposals-store-updates is true. (true)
# es-objects-proposals-no-delete = 

# Store account objects (true)
# es-objects-accounts = 

# Store all updates to the account objects (false)
# es-objects-accounts-store-updates = 

# Store asset objects (true)
# es-objects-assets = 

# Store all updates to the asset objects (false)
# es-objects-assets-store-updates = 

# Store account balances (true)
# es-objects-balances = 

# Store all updates to the account balances (false)
# es-objects-balances-store-updates = 

# Store limit order objects (true)
# es-objects-limit-orders = 

# Store all updates to the limit orders (false)
# es-objects-limit-orders-store-updates = 

# Do not delete a limit order object from ES even if it is deleted from chain state. It is implicitly true and can not be set to false if es-objects-limit-orders-store-updates is true. (false)
# es-objects-limit-orders-no-delete = 

# Store bitasset data, including price feeds (true)
# es-objects-asset-bitasset = 

# Store all updates to the bitasset data (false)
# es-objects-asset-bitasset-store-updates = 

# Store budget records (true)
# es-objects-budget-records = 

# Add a prefix to the index(objects-)
# es-objects-index-prefix = 

# Can not exceed the maximum index mapping depth (index.mapping.depth.limit) setting in ES, and need to be even smaller to not trigger the index.mapping.total_fields.limit error (10)
# es-objects-max-mapping-depth = 

# Deprecated. Please use the store-updates or no-delete options. Keep only current state of the objects(true)
# es-objects-keep-only-current = 

# Start doing ES job after block(0)
# es-objects-start-es-after-block = 

# Copy all applicable objects from the object database (chain state) to ES on program startup (false)
# es-objects-sync-db-on-startup = 


# ==============================================================================
# grouped_orders plugin options
# ==============================================================================

# Group orders by percentage increase on price. Specify a JSON array of numbers here, each number is a group, number 1 means 0.01%. 
tracked-groups = [10,100]


# ==============================================================================
# custom_operations plugin options
# ==============================================================================

# Start processing custom operations transactions with the plugin only after this block
custom-operations-start-block = 45000000


# ==============================================================================
# logging options
# ==============================================================================
#
# Logging configuration is loaded from logging.ini by default.
# If logging.ini exists, logging configuration added in this file will be ignored.
